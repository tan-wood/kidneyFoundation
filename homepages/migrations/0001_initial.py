# Generated by Django 4.1.3 on 2022-11-29 17:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Alert_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=25)),
            ],
            options={
                'db_table': 'alert_type',
            },
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=25)),
            ],
            options={
                'db_table': 'condition',
            },
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('food_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'food',
            },
        ),
        migrations.CreateModel(
            name='FoodGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'foodgroup',
            },
        ),
        migrations.CreateModel(
            name='MealCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'mealcategory',
            },
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'measurement',
            },
        ),
        migrations.CreateModel(
            name='Nutrient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nutrient_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'nutrient',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('username', models.CharField(max_length=20)),
                ('password', models.CharField(max_length=20)),
                ('age', models.IntegerField(default=0)),
                ('weight', models.FloatField(default=0)),
                ('height', models.FloatField(default=0)),
                ('email', models.EmailField(max_length=100)),
                ('phone', models.CharField(blank=True, max_length=13)),
                ('address1', models.CharField(max_length=20)),
                ('address2', models.CharField(max_length=20)),
                ('city', models.CharField(max_length=20)),
                ('state', models.CharField(max_length=2)),
                ('zip', models.CharField(max_length=9)),
            ],
            options={
                'db_table': 'patient',
            },
        ),
        migrations.CreateModel(
            name='Patient_Logs_Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0.0)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepages.food')),
                ('measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepages.measurement')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepages.patient')),
            ],
            options={
                'db_table': 'patient_logs_food',
            },
        ),
        migrations.CreateModel(
            name='Patient_Condition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_diagnosed', models.DateField()),
                ('condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepages.condition')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepages.patient')),
            ],
            options={
                'db_table': 'patient_condition',
            },
        ),
        migrations.CreateModel(
            name='Nutrient_In_Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0.0)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepages.food')),
                ('measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepages.measurement')),
                ('nutrient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepages.nutrient')),
            ],
            options={
                'db_table': 'nutrient_in_food',
            },
        ),
        migrations.AddField(
            model_name='food',
            name='food_group',
            field=models.ManyToManyField(to='homepages.foodgroup'),
        ),
        migrations.AddField(
            model_name='food',
            name='meal_category',
            field=models.ManyToManyField(to='homepages.mealcategory'),
        ),
        migrations.AddField(
            model_name='food',
            name='nutrient',
            field=models.ManyToManyField(through='homepages.Nutrient_In_Food', to='homepages.nutrient'),
        ),
        migrations.CreateModel(
            name='Diet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=25)),
                ('patients', models.ManyToManyField(to='homepages.patient')),
            ],
            options={
                'db_table': 'diet',
            },
        ),
        migrations.AddField(
            model_name='condition',
            name='patients',
            field=models.ManyToManyField(blank=True, through='homepages.Patient_Condition', to='homepages.patient'),
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField()),
                ('alert_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepages.alert_type')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepages.patient')),
            ],
            options={
                'db_table': 'alert',
            },
        ),
    ]
